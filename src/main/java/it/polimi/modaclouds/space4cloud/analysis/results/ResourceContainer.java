//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.31 at 05:18:06 PM CEST 
//


package it.polimi.modaclouds.space4cloud.analysis.results;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBMergeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.MergeFrom;
import org.jvnet.jaxb2_commons.lang.MergeStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for resourceContainer complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="resourceContainer">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="cloudPlatform" type="{http://www.modaclouds.eu/xsd/2013/6/resource-model-extension}paasService"/>
 *           &lt;element name="cloudResource" type="{http://www.modaclouds.eu/xsd/2013/6/resource-model-extension}iaasService"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="id" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="provider" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "resourceContainer", propOrder = {
    "cloudPlatform",
    "cloudResource"
})
public class ResourceContainer
    implements Cloneable, CopyTo, Equals, HashCode, MergeFrom, ToString
{

    protected PaasService cloudPlatform;
    protected IaasService cloudResource;
    @XmlAttribute(name = "id", required = true)
    protected String id;
    @XmlAttribute(name = "provider")
    protected String provider;

    /**
     * Gets the value of the cloudPlatform property.
     * 
     * @return
     *     possible object is
     *     {@link PaasService }
     *     
     */
    public PaasService getCloudPlatform() {
        return cloudPlatform;
    }

    /**
     * Sets the value of the cloudPlatform property.
     * 
     * @param value
     *     allowed object is
     *     {@link PaasService }
     *     
     */
    public void setCloudPlatform(PaasService value) {
        this.cloudPlatform = value;
    }

    /**
     * Gets the value of the cloudResource property.
     * 
     * @return
     *     possible object is
     *     {@link IaasService }
     *     
     */
    public IaasService getCloudResource() {
        return cloudResource;
    }

    /**
     * Sets the value of the cloudResource property.
     * 
     * @param value
     *     allowed object is
     *     {@link IaasService }
     *     
     */
    public void setCloudResource(IaasService value) {
        this.cloudResource = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the provider property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getProvider() {
        return provider;
    }

    /**
     * Sets the value of the provider property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setProvider(String value) {
        this.provider = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            PaasService theCloudPlatform;
            theCloudPlatform = this.getCloudPlatform();
            strategy.appendField(locator, this, "cloudPlatform", buffer, theCloudPlatform);
        }
        {
            IaasService theCloudResource;
            theCloudResource = this.getCloudResource();
            strategy.appendField(locator, this, "cloudResource", buffer, theCloudResource);
        }
        {
            String theId;
            theId = this.getId();
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            String theProvider;
            theProvider = this.getProvider();
            strategy.appendField(locator, this, "provider", buffer, theProvider);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ResourceContainer)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ResourceContainer that = ((ResourceContainer) object);
        {
            PaasService lhsCloudPlatform;
            lhsCloudPlatform = this.getCloudPlatform();
            PaasService rhsCloudPlatform;
            rhsCloudPlatform = that.getCloudPlatform();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cloudPlatform", lhsCloudPlatform), LocatorUtils.property(thatLocator, "cloudPlatform", rhsCloudPlatform), lhsCloudPlatform, rhsCloudPlatform)) {
                return false;
            }
        }
        {
            IaasService lhsCloudResource;
            lhsCloudResource = this.getCloudResource();
            IaasService rhsCloudResource;
            rhsCloudResource = that.getCloudResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cloudResource", lhsCloudResource), LocatorUtils.property(thatLocator, "cloudResource", rhsCloudResource), lhsCloudResource, rhsCloudResource)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            String lhsProvider;
            lhsProvider = this.getProvider();
            String rhsProvider;
            rhsProvider = that.getProvider();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "provider", lhsProvider), LocatorUtils.property(thatLocator, "provider", rhsProvider), lhsProvider, rhsProvider)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            PaasService theCloudPlatform;
            theCloudPlatform = this.getCloudPlatform();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cloudPlatform", theCloudPlatform), currentHashCode, theCloudPlatform);
        }
        {
            IaasService theCloudResource;
            theCloudResource = this.getCloudResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cloudResource", theCloudResource), currentHashCode, theCloudResource);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            String theProvider;
            theProvider = this.getProvider();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "provider", theProvider), currentHashCode, theProvider);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof ResourceContainer) {
            final ResourceContainer copy = ((ResourceContainer) draftCopy);
            if (this.cloudPlatform!= null) {
                PaasService sourceCloudPlatform;
                sourceCloudPlatform = this.getCloudPlatform();
                PaasService copyCloudPlatform = ((PaasService) strategy.copy(LocatorUtils.property(locator, "cloudPlatform", sourceCloudPlatform), sourceCloudPlatform));
                copy.setCloudPlatform(copyCloudPlatform);
            } else {
                copy.cloudPlatform = null;
            }
            if (this.cloudResource!= null) {
                IaasService sourceCloudResource;
                sourceCloudResource = this.getCloudResource();
                IaasService copyCloudResource = ((IaasService) strategy.copy(LocatorUtils.property(locator, "cloudResource", sourceCloudResource), sourceCloudResource));
                copy.setCloudResource(copyCloudResource);
            } else {
                copy.cloudResource = null;
            }
            if (this.id!= null) {
                String sourceId;
                sourceId = this.getId();
                String copyId = ((String) strategy.copy(LocatorUtils.property(locator, "id", sourceId), sourceId));
                copy.setId(copyId);
            } else {
                copy.id = null;
            }
            if (this.provider!= null) {
                String sourceProvider;
                sourceProvider = this.getProvider();
                String copyProvider = ((String) strategy.copy(LocatorUtils.property(locator, "provider", sourceProvider), sourceProvider));
                copy.setProvider(copyProvider);
            } else {
                copy.provider = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ResourceContainer();
    }

    public void mergeFrom(Object left, Object right) {
        final MergeStrategy strategy = JAXBMergeStrategy.INSTANCE;
        mergeFrom(null, null, left, right, strategy);
    }

    public void mergeFrom(ObjectLocator leftLocator, ObjectLocator rightLocator, Object left, Object right, MergeStrategy strategy) {
        if (right instanceof ResourceContainer) {
            final ResourceContainer target = this;
            final ResourceContainer leftObject = ((ResourceContainer) left);
            final ResourceContainer rightObject = ((ResourceContainer) right);
            {
                PaasService lhsCloudPlatform;
                lhsCloudPlatform = leftObject.getCloudPlatform();
                PaasService rhsCloudPlatform;
                rhsCloudPlatform = rightObject.getCloudPlatform();
                PaasService mergedCloudPlatform = ((PaasService) strategy.merge(LocatorUtils.property(leftLocator, "cloudPlatform", lhsCloudPlatform), LocatorUtils.property(rightLocator, "cloudPlatform", rhsCloudPlatform), lhsCloudPlatform, rhsCloudPlatform));
                target.setCloudPlatform(mergedCloudPlatform);
            }
            {
                IaasService lhsCloudResource;
                lhsCloudResource = leftObject.getCloudResource();
                IaasService rhsCloudResource;
                rhsCloudResource = rightObject.getCloudResource();
                IaasService mergedCloudResource = ((IaasService) strategy.merge(LocatorUtils.property(leftLocator, "cloudResource", lhsCloudResource), LocatorUtils.property(rightLocator, "cloudResource", rhsCloudResource), lhsCloudResource, rhsCloudResource));
                target.setCloudResource(mergedCloudResource);
            }
            {
                String lhsId;
                lhsId = leftObject.getId();
                String rhsId;
                rhsId = rightObject.getId();
                String mergedId = ((String) strategy.merge(LocatorUtils.property(leftLocator, "id", lhsId), LocatorUtils.property(rightLocator, "id", rhsId), lhsId, rhsId));
                target.setId(mergedId);
            }
            {
                String lhsProvider;
                lhsProvider = leftObject.getProvider();
                String rhsProvider;
                rhsProvider = rightObject.getProvider();
                String mergedProvider = ((String) strategy.merge(LocatorUtils.property(leftLocator, "provider", lhsProvider), LocatorUtils.property(rightLocator, "provider", rhsProvider), lhsProvider, rhsProvider));
                target.setProvider(mergedProvider);
            }
        }
    }

}
